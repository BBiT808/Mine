=================================

정형데이터, 반정형데이터, 비정형데이터 차이점 조사 !!

SQL과 noSQL 차이점 조사 !!

mongodb의 특징을 조사 !!

==================================


1.

정형 데이터, 반정형 데이터, 비정형 데이터는 데이터의 형태에 따라 구분되는 데이터의 종류!!

 1) 정형 데이터 : 미리 정해진 구조에 따라 저장된 데이터로, 관계형 데이터베이스(RDBMS)에 저장.
		       숫자, 짧은 텍스트, 날짜와 같은 이산형 데이터 유형이 포함됨.
 		       행과 열로 표시되며, 각 열은 다른 속성을 나타냄. 
		       정형 데이터는 체계적이기 때문에 머신 러닝 알고리즘과 인간에 의해 쉽게 처리. 


 2) 반정형 데이터 : 데이터의 구조 정보를 데이터와 함께 제공하는 파일 형식의 데이터로, 
			  XML, HTML, JSON 등의 파일 형태로 저장. 
			  데이터의 형식과 구조가 변경될 수 있는 데이터이며,
			  스키마 및 메타데이터 특성을 가지고 있음.

 3) 비정형 데이터 : 정의된 구조가 없는 데이터로, 동영상 파일, 오디오 파일, 사진, 보고서, 
			  메일 본문 등이 포함됨. 정형 데이터베이스 형식으로 저장되지 않는 데이터 세트이며,
 			  내부 구조가 있지만, 데이터 모델을 통해 미리 정의되지 않음. 
			  데이터 구조가 없어 내용에 대한 질의 처리를 할 수 없음.


2. 
  
 1) SQL이란?
SQL은 데이터를 쿼리하고 관리하는 데 사용되는 도메인 고유의 언어. 
사용자가 관계형 데이터베이스에서 레코드를 쿼리, 삽입, 
삭제 및 업데이트할 수 있도록 하는 방식으로 작동. 
또한 SQL을 사용하면 트랜잭션과 저장 함수 또는 뷰와 같은 
내장 프로시저를 사용하여 복잡한 로직을 적용할 수 있습니다.

 2) NoSQL이란 무엇인가요?
NoSQL은 Not only SQL의 약자이며, 문서, 그래프 데이터베이스, 키-값 저장소와 같은 
비관계형 데이터 구조를 사용하여 데이터를 저장하고 검색하는 데이터베이스의 한 유형. 
NoSQL 시스템은 기존의 관계형 데이터베이스보다 유연하게 설계되어 
사용량이나 부하 변화에 따라 쉽게 확장 또는 축소 가능. 애플리케이션에 사용하기에 이상적.

 3) SQL과 NoSQL의 5가지 중요한 차이점.

   i) SQL 데이터베이스는 관계형 데이터베이스이고, NoSQL 데이터베이스는 비관계형 데이터베이스.
  ii) SQL 데이터베이스는 구조화 쿼리 언어(SQL)를 사용하며 미리 정의된 스키마 존재. 
      NoSQL 데이터베이스에는 구조화되지 않은 데이터를 위한 동적 스키마 존재.
 iii) SQL 데이터베이스는 수직적 확장이 가능한 반면, NoSQL 데이터베이스는 수평적 확장이 가능.
 iv) SQL 데이터베이스는 테이블 기반인 반면, 
     NoSQL 데이터베이스는 문서, 키-값, 그래프 또는 와이드 컬럼 스토어.
  v) SQL 데이터베이스는 다중 행 트랜잭션에 더 적합한 반면, 
     NoSQL은 문서나 JSON과 같은 비정형 데이터에 더 적합.

 4) SQL 보다 NoSQL을 사용하는 이유
NoSQL은 유연성과 확장성이 더 뛰어나기 때문에 많은 경우 SQL보다 선호. 
NoSQL 시스템 사용의 주요 이점은 개발자가 기존 관계형 데이터베이스의 
오버헤드 없이 데이터를 빠르고 쉽게 저장하고 액세스할 수 있음. 
따라서 개발팀은 기본 데이터 스토리지 구현에 대한 걱정 없이 
기능 및 코어 비즈니스 로직을 더 빠르게 제공하는 데 집중 가능.


3.

MongoDB는 2009년 처음 출시된 NoSQL 데이터베이스로, 
데이터를 테이블 형식이 아닌 도큐먼트(Document) 단위로 저장하는 ‘Document-Oriented 데이터베이스’. 
여기서 도큐먼트는 JSON 형식의 데이터를 의미하며, 테이블 형식에 비해 뛰어난 유연성을 가짐.

일반적으로 RDBMS는 테이블 형식으로 다뤄 정형화된 데이터를 다루기 용이한 특성이 있지만, 
최근 현대의 애플리케이션은 매우 빠르게 변화하는 요구사항과 
대규모 데이터를 처리해야 하는 상황이 많아짐에 따라 RDBMS만으로는 대응하기 어려움.

이러한 한계를 해결하고자 이전의 RDBMS들과는 다른 ‘스키마 유연성’과 
‘수평적 확장성’을 고려하여 현대식 데이터베이스 ‘MongoDB’가 설계 및 개발됨.

 

 
1) MongoDB의 주요 특징

  i) 스키마 (schema)
스키마란 데이터구조를 정의하는 청사진을 의미하며, 어떤 데이터가 어디에 저장되고 
어떤 형식과 관계를 정의하는지에 대한 것.

MongoDB는 데이터베이스 아래에 여러 개의 테이블 대신 
‘컬렉션(Collection)’에 JSON(Document) 형태의 데이터를 저장하며, 
이를 바이너리 포맷으로 변환한 BSON(Binary JSON) 형태로 처리.

이를 통해 빠른 데이터 변경과 비정형 데이터 처리, 개발 속도 향상, 
다양한 데이터 구조의 통합을 가능하게 하는 유연한 스키마를 확보할 수 있고, 
스키마 벨리데이션이라는 기능을 통해 필요한 경우 RDBMS처럼 스키마 제약 설정 가능.

 
 ii) 복제와 고가용성
대부분의 DB 시스템은 장애애 대비한 고가용성(HA)을 지원하지만, 
RDBMS는 외부 어플리케이션에 의존해서 장애 발생 시 스위칭하는데 시간이 걸리고, 
정상 작동 여부도 관리자가 확인해야 함. 

반면 MongoDB는 Raft 알고리즘을 기반으로 자동 스위칭 기능을 제공해 
1초 내외의 지연만 발생하며, read/write concern 및 preference 설정을 통해 
데이터 일관성과 트래픽 분산 지원.

 

iii) 수평적 확장(샤딩)
‘샤딩’으로 MongoDB는 데이터를 여러 서버에 분산 저장하여 수평 확장이 가능. 
기존 RDBMS의 파티셔닝 방식과 달리 MongoDB는 샤드 클러스터 구조를 통해 
자동으로 데이터를 분산 처리. 
샤드 클러스터는 쿼리 라우팅을 담당하는 ‘mongos’, 샤딩 메타데이터를 관리하는 ‘config 서버’, 
데이터를 저장하는 ‘shard 노드’로 구성. 

샤드키를 사용해 데이터를 분배하고, 이를 통해 대용량 데이터를 효율적으로 처리하며 
손쉽게 확장성을 확보.

 

iv) 다양한 인덱싱 기능 지원
MongoDB는 B-Tree 기반의 단일 필드 인덱스를 포함해 복합키, 
멀티키(Multi-Key), 공간(Geo) 해시(Hash), 텍스트(Text)등 다양한 인덱스를 지원하여, 
다양한 쿼리에 최적화된 성능 제공. 

특히 공간 인덱스는 구글에서 개발한 S2Geometry 라이브러리를 사용해 
위치 기반 데이터를 효율적으로 처리할 수 있어 택시 및 바이크 공유 서비스 등 
위치 기반 애플리케이션에서 큰 이점 제공.

 

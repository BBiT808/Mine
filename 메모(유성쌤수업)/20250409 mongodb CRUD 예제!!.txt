### 20250409 수업 !!!!!

mongodb 6.0 이상으로 5.x대를 빨리 건너뜀 !! ㅇ0ㅇ
6.0 이상은 실행 쉘이 **없기 때문에** mongosh를 설치해서 작동해야 한대~

____________________________________________________

시작!!! 
터미널 열어서 
docker exec -it mongodb bash로 들어가기!
mongosh 치기 !
show dbs로 데이터베이스 확인 !
_____________________________________________________

이름 나이
고길동

슈퍼맨 12

배트맨 		부자 남자
_____________________________________________________

데이터베이스가 필요한데!!! 
데이터 베이스를 초기에 생성하지 않을 때 ㅇ0ㅇ

테이블 >


컬렉션(데이터 베이스가 유동적으로 생성된대 !!!!)
_____________________________________________________

>>MongoDB는 lazy creation을 채택한다 ! ; 사용자가 필요할 때 자동 생성됨 !!
______________________________________________________

 ## 터미널에 붙여넣기 할 때는 Ctrl + Shift + V !!!
cf) db.c1.insertMany 

## 데이터 삽입!!
db.c1.insertOne({name:'hong', age:22, etc : "아버지부르지못함"})
db.c1.insertOne({name:'superman',etc:"힘쌤"})

db.c1.insertMany([{name:'coolboy', age:17, etc:"잘생김"},{name:'cutegirl',age:20}]) ; Many는 리스트 형태로 삽입~


## 데이터를 읽어보고 싶다 !!
db.c1.find()
db.c1.find({age:{$gte:20}})
db.c1.findOne({name:"hong"})

===================
show collection
===================
cf) 비교구문 6가지 !!!
[GT]> : 크다
[GTE(equal)/GE]>= : 크거나 같다
[LT]< : 작다
[LTE/LE]<= : 작거나 같다.
[EQ]==, === : 같다 !
[N(not)EQ/NE]<>, !, not : 다르다 !!!

cf) !! 그럼 mongodb에서 20살인 사람만 찾고 싶으면 ??!
    db.c1.find({age:{$eq:20}})
===================

cf) 카멜법 !!! : 단어와 단어 사이에 대문자가 들어가서 꼭 낙타등같아~ ^_^ (띄어쓰기 하기는 애매하니까)
===================

## column을 추가해보아요~ ; 아마도 ?
db.c1.updateOne({name:'cutegirl'},{$set:{gender:"female"}})
db.c1.updateMany({age:{$lte:19}},{$set:{prop:"미성년자"}})

## 데이터 삭제 !!
db.c1.deleteOne({name:"hong"})


=======
예제 !!!!
name : test1, age : 100
name: test2, etc: "연습용"

db.c1.insertMany([{name:'test1',age:100},{name:'test2', etc:"연습용"}])

## 흥!!! 난 이 데이터가 마음에 안 들어 !!!!
db.c1.deleteMany({name:/^test/}) ; 이름이 test로 시작하는 모든 놈들을 지워버리겠어..!! 큭큭..
=======



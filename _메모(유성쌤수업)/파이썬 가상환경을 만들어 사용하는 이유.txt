retrived from https://wikidocs.net/267778

파이썬 가상환경을 만들어 사용하는 이유

파이썬 가상환경(virtual environment)은 프로젝트마다 독립된 파이썬 실행 환경을 제공하기 위한 도구이며, 가상환경은 프로젝트 간의 의존성 충돌을 방지하고, 관리 효율성을 높이는 데 중요하다.


1) 프로젝트 간 의존성 충돌 방지
여러 프로젝트가 동일한 시스템에 설치된 경우, 서로 다른 버전의 패키지가 필요할 수 있다. 이런 상황에서 각 프로젝트마다 독립적인 가상환경을 생성하면, 프로젝트별로 필요한 패키지와 버전을 격리하여 설치할 수 있다.

2) 시스템 전역 환경 오염 방지
전역 환경(global environment)에 패키지를 설치하면, 불필요한 패키지로 인해 환경이 복잡해지고 관리가 어려워진다. 또한, 패키지를 잘못 삭제하거나 변경하면 다른 프로젝트에도 영향을 미친다. 가상환경은 시스템 전역 환경과 독립적이므로, 특정 프로젝트에 필요한 패키지만 설치하여 전역 환경을 쉽게 관리할 수 있다.

3) 프로젝트 이식성 향상
프로젝트를 다른 시스템(예: 동료 개발자의 컴퓨터 또는 배포 서버)으로 옮길 때, 동일한 파이썬 버전과 패키지를 정확히 맞춰야 할 수 있다. 가상환경 내 설치된 패키지 목록을 requirements.txt로 저장하고, 이를 다른 환경에서 설치하면 동일한 실행 환경을 쉽게 재현 가능하다.

4) 팀 협업에서의 일관성 유지
팀원이 서로 다른 환경에서 작업한다면, 동일한 코드를 실행해도 결과가 다를 수 있다. 가상환경을 사용하면 모든 팀원이 동일한 패키지와 버전을 사용하도록 강제할 수 있어, 환경의 일관성이 유지된다.

5) 테스트 및 디버깅 환경 분리
동일한 환경에서 테스트, 디버깅, 또는 개발을 진행하면 예상치 못한 결과가 나올 수 있다. 가상환경을 사용하여 테스트와 개발 환경을 분리하면, 각 환경에 적합한 패키지를 설치하여 작업이 가능하다.
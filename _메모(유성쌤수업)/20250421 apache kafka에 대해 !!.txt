## 20250421 카프카에 대해서 !!!

카프카(Kafka)란?
카프카(Kafka)는 파이프라인, 스트리밍 분석, 데이터 통합 및 미션 크리티컬 애플리케이션을 위해 설계된 고성능 분산 이벤트 스트리밍 플랫폼이다.

Pub-Sub 모델의 메시지 큐 형태로 동작하며 분산환경에 특화되어 있다.

Fortune 100개 기업 중 80% 이상이 Kafka를 사용한다. 국내에서도 많이 사용하는 추세다.

카프카의 탄생 배경
비즈니스 소셜 네트워크 서비스인 링크드인 (linked-in) 에서 개발했다.

기존 데이터 시스템의 문제점
각 애플리케이션과 DB가 end-to-end 로 연결되어 있고(각 파이프라인이 파편화 되어있음), 요구사항이 늘어남에 따라 데이터 시스템 복잡도가 높아지면서 다음과 같은 문제가 발생하게 되었다.

1. 시스템 복잡도 증가 (Complexity)

통합된 전송 영역이 없어 데이터 흐름을 파악하기 어렵고, 시스템 관리가 어려움
특정 부분에서 장애 발생 시 조치 시간 증가 (=> 연결 되어있는 애플리케이션들을 모두 확인해야 하기 때문에)
HW 교체 / SW 업그레이드 시 관리포인트가 늘어나고, 작업시간 증가 (=> 연결된 애플리케이션에 side effect 가 없는지 확인해야 함)

2. 데이터 파이프라인 관리의 어려움

각 애플리케이션과 데이터 시스템 간의 별도의 파이프라인 존재하고, 파이프라인 마다 데이터 포맷과 처리 방식이 다름
새로운 파이프라인 확장이 어려워지면서, 확장성 및 유연성이 떨어짐
또한 데이터 불일치 가능성이 있어 신뢰도 감소

카프카를 적용함으로써 앞서 말했던 문제점들이 어느정도 완화되었다.

모든 이벤트/데이터의 흐름을 중앙에서 관리할 수 있게 됨
새로운 서비스/시스템이 추가되도 카프카가 제공하는 표준 포맷으로 연결하면 되므로 확장성과 신뢰성이 증가
개발자는 각 서비스간의 연결이 아닌, 서비스들의 비즈니스 로직에 집중 가능

카프카의 동작 방식 및 특징
카프카는 Pub-Sub 모델의 메세지 큐 형태로 동작한다.

우선 카프카를 이해하기 위해서는 메세지/이벤트 브로커와 메세지 큐에 대한 선제적인 이해가 필요하다.

메세지 큐 (Message Queue, MQ) 란?
메시지 큐는 메시지 지향 미들웨어(MOM : Message Oriented Middleware)를 구현한 시스템으로 프로그램(프로세스) 간의 데이터를 교환할 때 사용하는 기술이다.

=====================================
cmd 창 열어서 !!!
docker exec -it kafka bash

kafka-topics.sh --create --topic topic1 --bootstrap-server kafka:9092 --replication-factor 1 --partitions 2
; created topic topic1 뜨면 성공한 것 !!

kafka-console-producer.sh --topic

====================================
20250423 특강 추가 !!!!
특강 폴더에 docker-compose.yml 파일 하나 더 만들었음 !
터미널 열고 docker compose up -d

이후 cmd 창 열어서
docker exec -it kafka bash

### 친구와 해볼 경우
1) 프로듀서!!
- docker exec -it kafka bash 접속 후!!
- kafka-topics.sh --create --topic smart-car --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1
- kafka-console-producer.sh --topic smart-car --broker-list kafka:9092



#### 지금 작업은 선생님의 kafka 서버로 들어가서 데이터를 받아오는 것임!! 

kafka-topics.sh --bootstrap-server 210.119.14.56:9092 --list 이걸로 선생님 kafka에 있는 list 알 수 있음!!

kafka-console-consumer.sh --topic smart-car3 --bootstrap-server 210.119.14.56:9092
; 이걸로 이제 나는 선생님의 데이터를 소비하는 소비자가 되었음 ~~